{%- comment %}

  Product Detail Form Snippet
  ------------------------------------------------------------------------------

  Requires:
  - product.js
  - productDetailForm.js
  - slideshow.js
  - product.liquid
  - product-detail.scss

  Usage:

  {% include 'product-detail-form',
              product: { product } - required
              current_variant: { variant } - optional
  %}

{% endcomment -%}

{% comment %} Defaults {% endcomment %} 
{% if current_variant == blank %}
  {% assign current_variant = product.selected_or_first_available_variant %}
{% endif %}
{% comment %} End Defaults {% endcomment %}

{% capture size_guide_drawer_html %}
  {% include 'product-detail-form-size-guide-drawer', product: product %}
{% endcapture %}

{% comment %}
  If the product has variants for something other than color, force selection
  We don't care about color because it's very obvious what color is being selected
  if a product comes in color and size, we want the selection required text to just say "Select Size"
{% endcomment %}
{% assign selection_required = false %}
{% assign non_color_variant_options_count = 0 %}
{% assign single_non_color_variant_option_name = '' %}
{% for option in product.options_with_values %}
  {% assign option_name_upcase = option.name | upcase %}
  {% if option_name_upcase != "COLOR" and option.values.size > 1 %}
    {% assign selection_required = true %}
    {% assign single_non_color_variant_option_name = option.name %}
    {% assign non_color_variant_options_count = non_color_variant_options_count | plus: 1 %}
  {% endif %}
{% endfor %}

{% assign selection_required_text = 'products.product.select_options' | t %}
{% if non_color_variant_options_count == 1 %}
  {% assign selection_required_text = 'Select ' | append: single_non_color_variant_option_name %}
{% endif %}

{% assign desktop_options_html = '' %}
{% assign sticky_options_html  = '' %}

{% assign next_product = false %}
{% if product.collections.size > 0 %}
  {% assign related_collection = product.collections | first %}
  {% assign related_collection_products = related_collection.products %}
  {% assign product_position = false %}
  {% if related_collection_products.size > 1 %}
    {% for p in related_collection_products %}
      {% if p.handle == product.handle %}
        {% if forloop.index == related_collection_products.size %}
          {% assign next_product = related_collection_products[0] %}
        {% else %}
          {% assign next_product = related_collection_products[forloop.index] %}
        {% endif %}
        {% break %}
      {% endif %}
    {% endfor %}
  {% endif %}
{% endif %}

{% comment %}{% include 'pdp-logic-test' %}{% endcomment %}

<div class="product-detail-form" data-product-detail-form>

  <div data-product-scroll-container>
    
    {% include 'product-detail-form-gallery', product: product %}

    {% comment %} Secondary description - Shows on mobile and when vertical space is too tight {% endcomment %}
    <div class="secondary-description" data-secondary-description>
      <div class="pdf-description">
        {% comment %} Put this metafield inside the .pdf-description because that element has sizing styles {% endcomment %}
        {% if product.metafields.subtitle.text %}
          <h3 class="pdf-subtitle">{{ product.metafields.subtitle.text }}</h3>
        {% endif %}

        {{ product.description }}

        {% if size_guide_drawer_html != blank %}
          <div style="margin-top: 10px;">
            <a href="#" class="secondary-link" style="border-bottom: 1px solid" data-size-guide-show>See Size Guide</a>
          </div>
        {% endif %}
      </div>
      <div class="secondary-description__links">
        <a href="/">&larr; Back to Shop</a>
        {% if next_product %}
          <a href="{{ next_product.url }}" title="Next Product: {{ next_product.title | escape }}">Next Product &rarr;</a>
        {% endif %}
      </div>
    </div>
  </div>

  <div class="product-essential" data-product-essential>

    <div class="pdf-spaced-el hidden-xs">
      <div class="pdf-price">
        {% include 'product-detail-price', product: product, current_variant: current_variant %}
      </div>
    </div>
    <div class="pdf-spaced-el hidden-xs">
      <h1 class="pdf-title">{{ product.title }}</h1>
    </div>
    <div class="pdf-spaced-el">
      <div class="fixed-description" data-fixed-description>
        {% if product.metafields.subtitle.text %}
          <h3 class="pdf-subtitle">{{ product.metafields.subtitle.text }}</h3>
        {% endif %}
        <div class="pdf-description">{{ product.description }}</div>
        {% if size_guide_drawer_html != blank %}
          <div class="hidden-xs hidden-sm" style="margin-top: 10px;">
            <a href="#" class="secondary-link" data-size-guide-show>â†’ See Size Guide</a>
          </div>
        {% endif %}   
      </div>
    </div>

    <hr class="hidden-xs" />

    <div itemprop="offers" itemscope itemtype="http://schema.org/Offer">
      <meta itemprop="priceCurrency" content="{{ shop.currency }}">
      <meta itemprop="price" content="{{ current_variant.price | divided_by: 100.00 }}">
      <link itemprop="availability" href="http://schema.org/{% if current_variant.available %}InStock{% else %}OutOfStock{% endif %}">

      <div data-add-to-cart-form-wrapper>
        <form action="/cart/add" method="post" enctype="multipart/form-data" data-add-to-cart-form>     

          {% comment %} Since we split the form into 2 pieces (desktop and mobile) - capture the form elements so we only need to do all the product variant logic once {% endcomment %}

          {% if product.available %}
            {% unless product.has_only_default_variant %}
              {% for option in product.options_with_values %}
                
                {% assign option_name_upcase = option.name | upcase %}
                {% assign is_color = false %}
                {% assign is_size  = false %}
                {% if option_name_upcase == "COLOR" %}
                  {% assign is_color = true %}
                {% endif %}
                {% if option_name_upcase == "SIZE" %}
                  {% assign is_size = true %}
                {% endif %}

                {% comment %} Kind of dumb to create a var for this but it has a more semantic name {% endcomment %}
                {% assign option_has_single_value = false %}
                {% if option.values.size == 1 %}
                  {% assign option_has_single_value = true %}
                {% endif %}

                {% assign can_show_sold_out_ui_for_option = false %}
                {% if product.options.size == 1 %}
                  {% assign can_show_sold_out_ui_for_option = true %}
                {% elsif product.options.size == 2 and option.position == 2 and product.options_with_values[0].values.size == 1 %}
                  {% assign can_show_sold_out_ui_for_option = true %}
                {% endif %}

                {% capture desktop_option_html %}
                  {% comment %} Don't show the selector if there's only one value {% endcomment %}
                  <div class="selector-wrapper form-group js" {% if option_has_single_value %}style="display: none"{% endif %}>

                    <label for="SingleOptionSelector-{{ forloop.index0 }}">
                      {{ option.name }}
                    </label>

                    <select
                      id="SingleOptionSelector-{{ forloop.index0 }}"
                      class="form-control"
                      data-single-option-selector
                      data-index="option{{ option.position }}"
                      style="display: none">
                      {% for value in option.values %}
                        <option
                          value="{{ value | escape }}"
                          {% if option.selected_value == value %}selected="selected"{% endif %}>
                            {{ value }}
                        </option>
                      {% endfor %}
                    </select>

                    <div class="option-value-list" data-option-position="{{ option.position }}" data-variant-option-value-list>
                      {% for value in option.values %}

                        {% comment %} If the product only has one option (like size) then we can show values as sold out by checking the variant for that option {% endcomment %}
                        {% assign is_disabled = false %}

                        {% if can_show_sold_out_ui_for_option %}
                          {% for v in product.variants %}
                            {% assign variant_option_prop = 'option' | append: option.position %}
                            {% if v[variant_option_prop] == value and v.available == false %}
                              {% assign is_disabled = true %}
                            {% endif %}
                          {% endfor %}
                        {% endif %}

                        {% assign is_selected = false %}
                        {% if is_color and forloop.index0 == 0 %}
                          {% assign is_selected = true %}
                        {% endif %}

                        <a href="#" class="option-value{% if is_disabled %} is-disabled {% elsif is_selected %} is-selected{% endif %}" data-variant-option-value="{{ value }}" {% if is_disabled %} disabled="disabled" aria-disabled="true"{% endif %}>
                          {{ value }}
                        </a>
                      {% endfor %}
                    </div>

                  </div>
                {% endcapture %}

                {% capture sticky_row_option_html %}

                  {% assign selected_value = '' %}
                  {% capture sticky_row_options %}
                    {% for value in option.values %}

                      {% comment %} If the product only has one option (like size) then we can show values as sold out by checking the variant for that option {% endcomment %}
                      {% assign is_disabled = false %}
                      {% if can_show_sold_out_ui_for_option %}
                        {% for v in product.variants %}
                          {% assign variant_option_prop = 'option' | append: option.position %}
                          {% if v[variant_option_prop] == value and v.available == false %}
                            {% assign is_disabled = true %}
                          {% endif %}
                        {% endfor %}
                      {% endif %}

                      {% assign is_selected = false %}
                      {% if is_color and forloop.index0 == 0 %}
                        {% assign is_selected = true %}
                        {% assign selected_value = value %}
                      {% endif %}

                      <option
                        value="{{ value | escape }}"
                        {% if is_disabled %}disabled="disabled"{% endif %}
                        {% if is_selected %}selected="selected"{% endif %}>
                          {{ value | upcase }} {% if is_disabled %}- {{ 'products.product.sold_out' | t | upcase }}{% endif %}
                      </option>
                    {% endfor %}  
                  {% endcapture %}

                  {% unless option_has_single_value %}
                    <div class="sticky-row__entry">
                      <div class="sticky-select-wrap">
                        <select data-sticky-option-selector data-option-position="{{ option.position }}"{% if option.values.size == 1 %} style="display: none !important" {% endif %}>
                          {{ sticky_row_options }}
                        </select>
                        <div class="sticky-select-placeholder {% if option.values.size == 1 and selected_value != blank %}sticky-select-placeholder--no-select{% endif %}">
                          <strong class="sticky-select-label" {% if selected_value == blank %}style="display: none"{% endif %}>{{ option.name }}:</strong>
                          <span class="sticky-select-placeholder-text">
                            {% if selected_value != blank %}
                              {{ selected_value }}
                            {% else %}
                              Select {{ option.name }}
                            {% endif %}
                          </span>
                        </div>
                      </div>
                    </div>
                  {% endunless %}
                {% endcapture %}

                {% assign desktop_options_html    = desktop_options_html | append: desktop_option_html %}
                {% assign sticky_row_options_html = sticky_row_options_html | append: sticky_row_option_html %}

              {% endfor %}
            {% endunless %}

            {% comment %} Desktop Form Elements {% endcomment %}

            <div class="desktop-form">
              {{ desktop_options_html }}

              <label class="visually-hidden" for="no-js-variant-select">Select Variant</label>
              <select name="id" class="no-js" id="no-js-variant-select" data-product-select>
                {% for variant in product.variants %}
                  <option
                    {% if variant == current_variant %}selected="selected"{% endif %}
                    {% unless variant.available %}disabled="disabled"{% endunless %}
                    value="{{ variant.id }}">
                      {{ variant.title }}
                  </option>
                {% endfor %}
              </select>           

              <button
                type="submit"
                name="add"
                class="btn btn-primary"
                style="margin: 15px 0;"
                data-add-to-cart
                {% if selection_required or product.available == false %}disabled="disabled"{% endif %}>
                <span data-add-to-cart-text>
                  {% if selection_required %}
                    {{ selection_required_text }}
                  {% else %}
                    {{ 'products.product.add_to_cart' | t }}
                  {% endif %}
                </span>
              </button>

            </div>

          {% else %}

            <span class="u-fw-bold hidden-xs hidden-sm">Sold out</span>

          {% endif %}

          <a href="#" class="secondary-link" style="display: none; margin-top: 10px;" data-secondary-description-link>â†’ See Product Description</a>

          {% comment %} Mobile Sticky Form Elements {% endcomment %}

          {% comment %} Sticky row {% endcomment %}
          <div class="sticky-form" data-sticky-form>
            <div class="sticky-row">
              <div class="sticky-row__entry u-fw-bold">{{ product.title }}</div>
              <div class="sticky-row__entry" style="flex-basis: 60px; flex: 0.1; text-align: right; align-self: stretch;">
                {% include 'product-detail-price', product: product, current_variant: current_variant %}
              </div>
            </div>
            {% if sticky_row_options_html != blank %}
              <div class="sticky-row sticky-row--options">
                {{ sticky_row_options_html }}
              </div>
            {% endif %}
            <div class="sticky-row sticky-row--add-to-cart">
              {% if product.available %}
                {% comment %} Button mark up is the same as the desktop form except for the inner text {% endcomment %}
                <button
                  type="submit"
                  name="add"
                  class="btn btn-primary"
                  data-add-to-cart
                  {% if selection_required %}disabled="disabled"{% endif %}>
                  <span data-add-to-cart-text>
                    {{ 'products.product.add_to_cart' | t }}
                  </span>
                </button>
              {% else %}
                <div class="u-ta-center u-color-grey" style="flex: 1">{{ 'products.product.sold_out' | t }}</div>
              {% endif %}
            </div>
          </div>

        </form>
      </div>

    </div>
  </div>
       
  {{ size_guide_drawer_html }}

  <div class="intermediate-nav">
    <a href="/">Back to Shop</a>
    {% if next_product %}
      &nbsp; | &nbsp;
      <a href="{{ next_product.url }}" class="intermediate-nav__next-link" title="Next Product: {{ next_product.title | escape }}">
        Next Product &rarr;
        <img src="{{ next_product.featured_image | img_url: '100x' }}" class="intermediate-nav__next-image" alt="{{ next_product.featured_image.alt | escape }}" />
      </a>
    {% endif %}
  </div>

  {% unless product == empty %}
    <script type="application/json" data-product-json>
      {% include 'product-json', product: product %}
    </script>
  {% endunless %}  
</div>
